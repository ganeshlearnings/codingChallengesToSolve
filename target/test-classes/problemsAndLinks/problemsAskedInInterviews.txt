**************String Encoding****************

-->Start--<

Write a Method that Encodes given String according to the following rules. The method takes as input a string(str) to be encoded , and integer number(k). The number will be used to encode the string by those rules.

a.If the index of the character in the string(str) is prime number, then the character should be replaced with the character that comes k chraracters after.

For example if the char='c' and k=3 then the output should be 'f' because 'f' comes after 'c' within 3 characters: a b c d e f g..

b.If the index of the character in the string(str) is not a prime number, then the character should be replaced with the character that comes k characters before

For example: If the char="l" and k=5 then the output should be 'g' because 'g' comes before 'i' within 5 characters:f g h i j k l m n..


-->End--<

*************Is Possible***************************
-->Start--<

--> Is Possible
Consider a pair of integers,(a,b) . The following operations can be performed on (a,b) in any order, zero or more times.

-->(a.b)----> (a+b,b)
-->(a,b)----> (a,a+b)

Return a String that denotes whether or not (a,b) can be converted to (c,d) by performing zero or more of the operations specified above.

Example:
(a,b)=(1,1)
(c,d)=(5,2)

Perform the operation (1,1+1) to get (1,2) , perform the operation (1+2,2) to get (3,2) and perform the operation (3+2,2) to get(5,2) . Alternatively , the first operation could be (1+1,1) to get(2,1) and so on. The diagram below demostrates the example representing the pairs as Cartesian coordinates.


-->End--<

******String Check********

-->Start--<

Write a function that ges a string as input and returns True if the first half of the string contains all the characters in the second half , else returns false. If the length of the string is odd, then ignore the middle character.

Example:

-->Those Inputs will make the functions return true: abcab,reeterte,a$t$at

-->Those inputs will make the function return false: Abab,aatbb

-->End--<

